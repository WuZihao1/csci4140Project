var mysql=require('mysql');
var crypto = require('crypto');
var md5 = require('md5');
var moment = require('moment');
var lodash = require('lodash');

// this file define all the MYSQL query we use in index.js
function connectServer()
{
    var client=mysql.createConnection({
        host:'localhost',
        user:'root',
        password:'TheReaderB612#',
        port:'3306',
        database:'Anonymous'
    });
    console.log("connect success");
    return client;
}

function Display(client,callback){
    client.query('select file_name,path,tag1,tag2,tag3 from file where type=? union select file_name,path,tag1,tag2,tag3 from anonymous where type=? LIMIT 100',["public","public"],
        function(err,result){
            if(err)
                throw err;
            else
                callback(result);
        });
}


function DisplayPrivate(client,un,callback){
    client.query('select file_name, path,tag1,tag2,tag3 from file where uploader =? UNION select file_name,path,tag1,tag2,tag3 from file where type=? union select file_name,path,tag1,tag2,tag3 from anonymous where type=?',[un,"public","public"],
        function(err,result){
            if(err)
                throw err;
            else
                callback(result);
    });
}

function Search(client,search_content,username,loginState,callback){
    var select_stmt_part = "SELECT * FROM file ";
    var results = [];
    console.log(search_content.length);
    if(search_content.length == 64){
        //search by id
        var select_stmt = '';
        if(loginState == 2){
            select_stmt = select_stmt_part + "WHERE id ='"+search_content+"' AND (uploader='"+ username +"' OR type = 'public')";
        }else{
            select_stmt = select_stmt_part + "WHERE id ='"+search_content+"' AND type = 'public'";
        }
        client.query(select_stmt, function (err, result){
            if(err){
                console.log('[SELECT ERROR]', err.message);
            }
            results = result;
            //console.log(result);
            callback(result);
        });
    }
    else if(search_content.length == 32){
        var result1 = [];
        var select_anonymous_stmt = "SELECT * FROM anonymous WHERE id = '"+search_content+"'";
        client.query(select_anonymous_stmt, function(err, result){
            if(err){
                console.log('[ANONYMOUS SLECT ERROR]', err.message);
            }
            result1 = result;
            //console.log(result1);
            callback(result);
        });
    }
    else{
        var select_stmt1 = '';
        var select_stmt2 = '';
        var select_stmt3 = '';
        var select_stmt4 = '';

        if(loginState == 2){
            select_stmt1 = "(" + select_stmt_part + "WHERE file_name ='"+search_content+"' AND (uploader='"+ username +"' OR type = 'public')"+" LIMIT 2)";
            select_stmt2 = "(" + select_stmt_part + "WHERE file_name LIKE '%"+ search_content+"%' AND (uploader='"+ username +"' OR type = 'public') LIMIT 5)";
            select_stmt3 = "(" + select_stmt_part + "WHERE find_in_set('"+ search_content+"', file_name) AND (uploader= '" + username + "' OR type = 'public') LIMIT 5)";
            select_stmt4 = "(" + select_stmt_part + "WHERE (find_in_set('"+search_content+"', tag1) OR find_in_set('"+search_content+"',tag2) OR find_in_set('"+search_content+"',tag3)) AND (uploader='"+username+"' OR type = 'public') LIMIT 6)";
        }else{
            select_stmt1 = "(" + select_stmt_part + "WHERE file_name ='"+search_content+"' AND  type = 'public' LIMIT 2)";
            select_stmt2 = "(" + select_stmt_part + "WHERE file_name LIKE '%"+ search_content+"%' AND type = 'public' LIMIT 5)";
            select_stmt3 = "(" + select_stmt_part + "WHERE find_in_set('"+ search_content+"', file_name) AND type = 'public' LIMIT 5)";
            select_stmt4 = "(" + select_stmt_part + "WHERE (find_in_set('"+search_content+"', tag1) OR find_in_set('"+search_content+"',tag2) OR find_in_set('"+search_content+"',tag3)) AND type = 'public' LIMIT 6)";           
        }
        var unionString = " union ";
        var final = [];
        var finalStatement = select_stmt1 + unionString + select_stmt2 + unionString + select_stmt3 + unionString + select_stmt4;
        console.log(finalStatement);
        client.query(finalStatement,function(err,result){
            if(err){
                console.log('[SELECT1 ERROR]', err.message);
            }
            final = result;
            callback(final);
        });
    }
}

function Insert(client,id,file_name,uploader,type,path,tag1,tag2,tag3,callback){
    //var id = crypto.createHash('sha256').update(Date()+file_name).digest('hex');
    var parm = [id, file_name, uploader, type, path, tag1, tag2, tag3];

    var insert_stmt  = 'INSERT INTO file (id,file_name,uploader,type,path,tag1,tag2,tag3) VALUES(?,?,?,?,?,?,?,?)';
    client.query(insert_stmt, parm, function (err,result){
            if(err){
                console.log('[INSERT ERROR]', err.message);
            }
            var str = JSON.stringify(result);
            console.log(str);
            callback(str);
        });
}

function InsertForAnonymous(client,extract_code,fileName,full_path,type,tag1,tag2,tag3,callback){
    var anonymous_insert_stmt = 'INSERT INTO anonymous (id, file_name, path, type,expire_time,tag1,tag2,tag3) VALUES(?, ?, ?, ?,?,?,?,?)';
    //var extract_code = md5(Date()+fileName);
    var date = new Date();
    var year = date.getFullYear();
    var month = date.getMonth();
    var day = date.getDate()+1;
    var hour = date.getHours();
    var minute = date.getMinutes();
    var second = date.getSeconds();
    var tomorrow = year+'-'+month+'-'+day+' '+hour+'-'+minute+'-'+second;
    var formated_tomorrow = moment(new Date()).format(tomorrow);
    var newFileName = tomorrow + fileName;
        
    //----------------------just use fileName instead of newFileName
    var parm = [extract_code, fileName, full_path, type,formated_tomorrow,tag1,tag2,tag3];

    client.query(anonymous_insert_stmt, parm, function(err, result){
        if(err){
            console.log('[ANONYMOUS INSERT ERRER]', err.message);
        }
        var str = JSON.stringify(result);
        console.log(str);
        console.log(extract_code);
        callback(extract_code);
    });
}

function Register(client ,un,pass,callback)
{
    client.query('insert into user_list value(?,?)', [un,pass],
        function (err)
        {
            // if (err) {
            //     console.log("error:" + err.message);
            //     return err;
            // }
            callback(err);
        });
}

function Login(client ,un, callback) {
    client.query('select pass from user_list WHERE userid=?',[un], function (err, result) {
        if (err)
            throw err;
        else
            callback(result);
    });
}

//export the defined function to the project.

exports.connect = connectServer;
exports.Login = Login;
exports.Register = Register;

exports.Display = Display;
exports.DisplayPrivate = DisplayPrivate;

exports.Search = Search;
exports.Upload = Insert;
exports.UploadForAnonymous = InsertForAnonymous;






